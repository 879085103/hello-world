// 1045.cpp: 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include<iostream>

using namespace std;
int n;
char map[5][5];//储存地图,将堡垒能攻击到的地方标为D
int cnt = 0;//记录炮台数

int judge(int x, int y)
{
	for (int j = y + 1; j < n; j++)//检查该点所在列下侧
	{
		if (map[x][j] == 'X')//遇到了墙 退出 循环
		{
			break;
		}
		else if (map[x][j] == 'D')
			return false;
	}
	for (int j = y - 1; j >= 0; j--)//检查该点所在列上侧
	{
		if (map[x][j] == 'X')
		{
			break;
		}
		else if (map[x][j] == 'D')
			return false;
	}
	for (int j = x - 1; j >= 0; j--)
	{
		if (map[j][y] == 'X')//检查该点所在行左侧
		{
			break;
		}
		else if (map[j][y] == 'D')
			return false;
	}
	for (int j = x + 1; j < n; j++)
	{
		if (map[j][y] == 'X')//检查该点所在行左侧
		{
			break;
		}
		else if (map[j][y] == 'D')
			return false;
	}
	return true;
}

void dfs(int r)
{
	if (r > cnt)
		cnt = r;//更新最大值
	for(int i = 0; i  < n; i++)
		for (int j = 0; j < n; j++)
		{
			if (map[i][j] == '.')
			{
				if (judge(i, j) == true)
				{
					map[i][j] = 'D';
					dfs(r + 1);
					map[i][j] = '.';
				}
			}
		}

}
int main()
{
	while (cin >> n && n != 0)
	{
		cnt = 0;
		memset(map, '0', sizeof(map));
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
			{
				cin >> map[i][j];
			}
		dfs(0);
		cout << cnt << endl;
	}
    return 0;
}

