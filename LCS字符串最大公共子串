// 最长递增子序列LIS.cpp: 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include<iostream>
#include<string>
#include<algorithm>
#define MaxSize 50

using namespace std;

int a[MaxSize][MaxSize];
int b[MaxSize][MaxSize];

void Lcs(string x, string y)
{
	int m, n;
	int i, j;
	m = x.size();
	n = y.size();
	for(i = 1; i <= m; i++)
		for (j = 1; j <= n; j++)
		{
			if (x[i - 1] == y[j - 1])
			{
				a[i][j] = a[i - 1][j - 1] + 1;
			}//由左上角得到
			else
			{
				if (a[i - 1][j] >= a[i][j - 1])
				{
					a[i][j] = a[i - 1][j];
				}//由左边得到
				else
				{
					a[i][j] = a[i][j - 1];
				}//由右边得到
			}
		}
}

void PrintLcs(string x, int m, int n)
{
	if (m == 0 || n == 0)
		return;
	
	 if (a[m][n] == a[m - 1][n]  && a[m][n] != a[m][n - 1])
	{
		PrintLcs(x, m - 1, n);
	}
	else if(a[m][n] == a[m][n - 1] && a[m][n] != a[m - 1][n])
	{
		PrintLcs(x, m, n - 1);
	}
	else if (a[m][n] == a[m - 1][n] && a[m][n] == a[m][n - 1])//多个最长子序列
	{
	
		PrintLcs(x, m - 1, n);
	
		PrintLcs(x, m, n - 1);

	}
	else
	{
		PrintLcs(x, m - 1, n - 1);
		cout << x[m - 1];
	}
}

int main()
{
	string x, y;
	while (getline(cin, x) && getline(cin, y))
	{
		memset(a, 0, sizeof(a));
		memset(b, 0, sizeof(b));

		Lcs(x, y);
		PrintLcs(x, x.size(), y.size());
	}
    return 0;
}

