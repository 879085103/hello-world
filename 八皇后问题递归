// 八皇后.cpp: 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include<iostream>

using namespace std;

int temp = 0;
//参数row:表示起始行
//参数n:表示总列数
//参数chess[][8]:表示棋盘的每一行

int notDanger(int row, int j, int(*chess)[8])
{
	int i,k,flag1 = 0,flag2 = 0,flag3 = 0,flag4 = 0,flag5 = 0;

	//判断列方向
	for (i = 0; i < 8; i++)
	{
		if (*(*(chess + i) + j) != 0)
		{
			flag1 = 1;
			break;
		}
	}

	//判断左上方
	for (i = row, k = j; i >= 0 && k >= 0; i--, k--)
	{
		if (*(*(chess + i) + k) != 0)
		{
			flag2 = 1;
			break;
		}
	}

	//判断右下方
	for (i = row, k = j; i < 8 && k < 8; i++, k++)
	{
		if (*(*(chess + i) + k) != 0)
		{
			flag3 = 1;
			break;
		}
	}

	//判断右上方
	for (i = row, k = j; i >= 0 && k < 8; i--, k++)
	{
		if (*(*(chess + i) + k) != 0)
		{
			flag4 = 1;
			break;
		}
	}

	//判断左下方
	for (i = row, k = j; i < 8 && k >= 0; i++, k--)
	{
		if (*(*(chess + i) + k) != 0)
		{
			flag5 = 1;
			break;
		}
	}
	if (flag1 || flag2 || flag3 || flag4 || flag5)
		return 0;
	else
		return 1;
}
void EightQueen(int row, int n, int(*chess)[8])
{
	int chess2[8][8],i,j;
	for(i = 0; i < 8; i++)
		for (j = 0; j < 8; j++)
		{
			chess2[i][j] = chess[i][j];
		}

	if (row == 8)
	{
		cout << "第 " << temp + 1 << " 种"<<endl;
		for (i = 0; i < 8; i++)
		{
			for (j = 0; j < 8; j++)
			{
				cout << *(*(chess2 + i) + j) << " ";
			}
			cout << endl;
		}
		cout << endl;
		temp++;
	}
	else
	{
		
		//如果没有危险，继续往下
		for (j = 0; j < n; j++)
		{
			if ( notDanger (row,j,chess))//判断这个位置是否危险
			{
				for (i = 0; i < 8; i++)
				{
					*(*(chess2 + row) + i) = 0;
				}
				*(*(chess2 + row) + j) = 1;

				EightQueen(row + 1, n, chess2);
			}
		}
	}
}

int main()
{
	int chess[8][8],i,j;

	for(i = 0; i < 8 ; i++)
		for (j = 0; j < 8; j++)
		{
			chess[i][j] = 0;
		}
	EightQueen(0, 8, chess);
	
	cout << "总共有 " << temp << " 种解决方法" << endl;
    return 0;
}

